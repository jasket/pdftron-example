{"version":3,"sources":["components/tiles/PageTitle.js","context/useContext.js","components/searchbar/SearchBar.js","components/searchbar/SearchList.js","components/tiles/PageActionPanel.js","components/viewer/PdfViewer.js","components/tiles/PageViewerPanel.js","context/AppState.js","hooks/useViewer.js","hooks/useHighlights.js","components/App.js","reportWebVitals.js","index.js"],"names":["PageTitle","Box","mt","Typography","color","component","variant","my","Divider","React","memo","AppContext","createContext","SearchBar","useContext","searchValue","handleSearchValue","handleAddSearchItem","TextField","value","fullWidth","placeholder","helperText","onChange","e","target","onKeyDown","key","colors","SearchList","searchItems","handleHighlightText","onClick","useCallback","item","List","dense","map","rndColor","Math","floor","random","length","ListItem","style","join","Link","PageActionPanel","PdfViewer","viewer","ref","height","PageViewerPanel","AppState","children","useState","setSearchItems","includes","useRef","instance","setInstance","useEffect","a","WebViewer","path","initialDoc","current","createInstance","then","console","log","useViewer","searchText","colorRGB","docViewer","annotManager","Annotations","doc","getDocument","pageCount","getPageCount","i","loadPageText","text","textIndex","textStartIndex","annotationPromises","indexOf","annotationPromise","getTextPosition","quads","annotation","TextHighlightAnnotation","PageNumber","Quads","StrokeColor","Color","push","Promise","all","annotations","addAnnotations","drawAnnotationsFromList","useHighlights","Provider","App","CssBaseline","mx","Grid","container","spacing","xs","md","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf6de2be.chunk.js","sourcesContent":["import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst PageTitle = () => (\n  <Box mt={2}>\n    <Typography color=\"secondary\" component=\"h1\" variant=\"h5\">\n      PDF Highlight\n      <Box my={2}>\n        <Divider />\n      </Box>\n    </Typography>\n  </Box>\n);\n\nexport default React.memo(PageTitle);\n","import { createContext } from \"react\";\n\nconst AppContext = createContext(null);\n\nexport default AppContext;\n","import React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AppContext from \"../../context/useContext\";\n\nconst SearchBar = () => {\n  const { searchValue, handleSearchValue, handleAddSearchItem } = useContext(\n    AppContext\n  );\n\n  const onChange = (e) => {\n    handleSearchValue(e.target.value);\n  };\n\n  const onKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleAddSearchItem(e.target.value);\n    }\n  };\n\n  return (\n    <TextField\n      value={searchValue}\n      fullWidth\n      placeholder=\"Search value\"\n      helperText=\"Press Enter to add a search item\"\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n    />\n  );\n};\n\nexport default React.memo(SearchBar);\n","import React, { useCallback, useContext } from \"react\";\nimport AppContext from \"../../context/useContext\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Link from \"@material-ui/core/Link\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\n\nconst colors = [\n  [224, 130, 131],\n  [241, 130, 141],\n  [190, 144, 212],\n  [220, 198, 224],\n  [241, 231, 254],\n  [41, 241, 195],\n  [123, 239, 178],\n  [200, 247, 197],\n];\n\nconst SearchList = () => {\n  const { searchItems, handleHighlightText } = useContext(AppContext);\n\n  const onClick = useCallback(\n    (item, color) => {\n      handleHighlightText(item, color);\n    },\n    [handleHighlightText]\n  );\n\n  return (\n    <List dense>\n      {searchItems.map((item) => {\n        const rndColor = colors[Math.floor(Math.random() * colors.length)];\n        return (\n          <ListItem key={item}>\n            <ArrowRightIcon style={{ color: `rgb(${rndColor.join(\",\")})` }} />\n            <Link\n              component=\"button\"\n              variant=\"body2\"\n              onClick={() => onClick(item, rndColor)}\n            >\n              {item}\n            </Link>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default React.memo(SearchList);\n","import React from \"react\";\nimport SearchBar from \"../searchbar/SearchBar\";\nimport SearchList from \"../searchbar/SearchList\";\n\nconst PageActionPanel = () => (\n  <div>\n    <SearchBar />\n    <SearchList />\n  </div>\n);\n\nexport default React.memo(PageActionPanel);\n","import React, { useContext } from \"react\";\nimport AppContext from \"../../context/useContext\";\n\nconst PdfViewer = () => {\n  const { viewer } = useContext(AppContext);\n\n  return <div ref={viewer} style={{ height: \"99vh\" }} />;\n};\n\nexport default React.memo(PdfViewer);\n","import React from \"react\";\nimport PdfViewer from \"../viewer/PdfViewer\";\n\nconst PageViewerPanel = () => (\n  <div>\n    <PdfViewer />\n  </div>\n);\n\nexport default React.memo(PageViewerPanel);\n","import React, { useCallback, useState } from \"react\";\nimport AppContext from \"./useContext\";\nimport { useViewer } from \"../hooks/useViewer\";\nimport { useHighlights } from \"../hooks/useHighlights\";\n\nconst AppState = ({ children }) => {\n  const [searchItems, setSearchItems] = useState([]);\n  const [searchValue, handleSearchValue] = useState(\"\");\n\n  const handleAddSearchItem = useCallback(\n    (value) => {\n      if (!value) return;\n      if (!searchItems.includes(value)) setSearchItems([...searchItems, value]);\n      handleSearchValue(\"\");\n    },\n    [searchItems]\n  );\n\n  const { viewer, instance } = useViewer();\n  const { handleHighlightText } = useHighlights(instance);\n\n  return (\n    <AppContext.Provider\n      value={{\n        viewer,\n        handleHighlightText,\n        searchItems,\n        searchValue,\n        handleSearchValue,\n        handleAddSearchItem,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default React.memo(AppState);\n","import { useEffect, useRef, useState } from \"react\";\nimport WebViewer from \"@pdftron/webviewer\";\n\nexport function useViewer() {\n  const viewer = useRef(null);\n  const [instance, setInstance] = useState(null);\n\n  useEffect(() => {\n    async function createInstance() {\n      const instance = await WebViewer(\n        {\n          path: \"./webviewer/lib\",\n          initialDoc: \"./assets/alices-001-chapter.pdf\",\n        },\n        viewer.current\n      );\n      setInstance(instance);\n      return instance;\n    }\n\n    createInstance().then(console.log);\n  }, []);\n\n  return { viewer, instance };\n}\n","import { useCallback } from \"react\";\n\nexport function useHighlights(instance) {\n  const handleHighlightText = useCallback(\n    (searchText, colorRGB) => {\n      const { docViewer, annotManager, Annotations } = instance;\n      const doc = docViewer.getDocument();\n\n      const pageCount = doc.getPageCount();\n\n      for (let i = 1; i < pageCount; i++) {\n        // gets all text on the requested page\n        // see https://pdftron.com/api/web/CoreControls.Document.html#loadPageText__anchor\n        doc.loadPageText(i).then((text) => {\n          let textStartIndex = 0;\n          let textIndex;\n          const annotationPromises = [];\n\n          // find the position of the searched text and add text highlight annotation at that location\n          while ((textIndex = text.indexOf(searchText, textStartIndex)) > -1) {\n            textStartIndex = textIndex + searchText.length;\n            // gets quads for each of the characters from start to end index. Then,\n            // resolve the annotation and return.\n            // see https://pdftron.com/api/web/CoreControls.Document.html#getTextPosition__anchor\n            const annotationPromise = doc\n              .getTextPosition(i, textIndex, textIndex + searchText.length)\n              .then((quads) => {\n                const annotation = new Annotations.TextHighlightAnnotation();\n                annotation.PageNumber = i;\n                annotation.Quads = quads;\n                annotation.StrokeColor = new Annotations.Color(...colorRGB);\n                return annotation;\n              });\n            annotationPromises.push(annotationPromise);\n          }\n\n          // Wait for all annotations to be resolved.\n          Promise.all(annotationPromises).then((annotations) => {\n            annotManager.addAnnotations(annotations);\n            annotManager.drawAnnotationsFromList(annotations);\n          });\n        });\n      }\n    },\n    [instance]\n  );\n\n  return { handleHighlightText };\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PageTitle from \"./tiles/PageTitle\";\nimport { PageActionPanel, PageViewerPanel } from \"./tiles\";\nimport AppState from \"../context/AppState\";\nimport Box from \"@material-ui/core/Box\";\n\nconst App = () => (\n  <AppState>\n    <CssBaseline />\n\n    <Box mx={2}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={3}>\n          <PageTitle />\n          <PageActionPanel />\n        </Grid>\n        <Grid item xs={12} md={9}>\n          <PageViewerPanel />\n        </Grid>\n      </Grid>\n    </Box>\n  </AppState>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}